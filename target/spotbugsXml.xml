<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1761581462543' version='4.9.6' timestamp='1761581461461'><Project projectName='demo-spotbugs'><Jar>D:\demo-spotbugs\target\classes</Jar><SrcDir>D:\demo-spotbugs\src\main\java</SrcDir><WrkDir>D:\demo-spotbugs\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='86734515b295c3bd5720c24e721d8679' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_STRING_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient new String(String) constructor</ShortMessage><LongMessage>demo.Main.getUserRole() invokes inefficient new String(String) constructor</LongMessage><Class classname='demo.Main' primary='true'><SourceLine classname='demo.Main' start='3' end='17' sourcepath='demo/Main.java' sourcefile='Main.java'><Message>At Main.java:[lines 3-17]</Message></SourceLine><Message>In class demo.Main</Message></Class><Method isStatic='true' classname='demo.Main' signature='()Ljava/lang/String;' name='getUserRole' primary='true'><SourceLine endBytecode='41' classname='demo.Main' start='17' end='17' sourcepath='demo/Main.java' sourcefile='Main.java' startBytecode='0'></SourceLine><Message>In method demo.Main.getUserRole()</Message></Method><SourceLine endBytecode='6' classname='demo.Main' start='17' end='17' sourcepath='demo/Main.java' sourcefile='Main.java' startBytecode='6' primary='true'><Message>At Main.java:[line 17]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='bf4249116f3ac0e6107d89ce6a018111' cweid='595' rank='14' abbrev='ES' category='BAD_PRACTICE' priority='3' type='ES_COMPARING_STRINGS_WITH_EQ' instanceOccurrenceMax='0'><ShortMessage>Comparison of String objects using == or !=</ShortMessage><LongMessage>Comparison of String objects using == or != in demo.Main.main(String[])</LongMessage><Class classname='demo.Main' primary='true'><SourceLine classname='demo.Main' start='3' end='17' sourcepath='demo/Main.java' sourcefile='Main.java'><Message>At Main.java:[lines 3-17]</Message></SourceLine><Message>In class demo.Main</Message></Class><Method isStatic='true' classname='demo.Main' signature='([Ljava/lang/String;)V' name='main' primary='true'><SourceLine endBytecode='15' classname='demo.Main' start='5' end='14' sourcepath='demo/Main.java' sourcefile='Main.java' startBytecode='0'></SourceLine><Message>In method demo.Main.main(String[])</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/String;'><SourceLine classname='java.lang.String' start='142' end='4914' sourcepath='java/lang/String.java' sourcefile='String.java'><Message>At String.java:[lines 142-4914]</Message></SourceLine><Message>Actual type String</Message></Type><String role='STRING_CONSTANT' value='admin'><Message>String constant "admin"</Message></String><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='13' name='role' register='1'><Message>Value loaded from role</Message></LocalVariable><SourceLine endBytecode='15' classname='demo.Main' start='9' end='9' sourcepath='demo/Main.java' sourcefile='Main.java' startBytecode='15' primary='true'><Message>At Main.java:[line 9]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.RefComparisonWarningProperty.STATIC_AND_UNKNOWN' value='true'></Property></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='Dm' category='PERFORMANCE' type='DM_STRING_CTOR'><ShortDescription>Method invokes inefficient new String(String) constructor</ShortDescription><Details>

  &lt;p&gt; Using the &lt;code&gt;java.lang.String(String)&lt;/code&gt; constructor wastes memory
  because the object so constructed will be functionally indistinguishable
  from the &lt;code&gt;String&lt;/code&gt; passed as a parameter.&amp;nbsp; Just use the
  argument &lt;code&gt;String&lt;/code&gt; directly.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='595' abbrev='ES' category='BAD_PRACTICE' type='ES_COMPARING_STRINGS_WITH_EQ'><ShortDescription>Comparison of String objects using == or !=</ShortDescription><Details>

  &lt;p&gt;This code compares &lt;code&gt;java.lang.String&lt;/code&gt; objects for reference
equality using the == or != operators.
Unless both strings are either constants in a source file, or have been
interned using the &lt;code&gt;String.intern()&lt;/code&gt; method, the same string
value may be represented by two different String objects. Consider
using the &lt;code&gt;equals(Object)&lt;/code&gt; method instead.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://cwe.mitre.org/data/definitions/595.html"&gt;CWE-595: Comparison of Object References Instead of Object Contents&lt;/a&gt;.
&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='597' abbrev='ES'><Description>Checking String equality using == or !=</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='1' priority_2='1' priority_3='1' total_size='13' clock_seconds='1.76' referenced_classes='17' vm_version='21.0.8+9-LTS' total_bugs='2' java_version='21.0.8' gc_seconds='0.01' alloc_mbytes='512.00' cpu_seconds='6.28' peak_mbytes='198.61' timestamp='Mon, 27 Oct 2025 23:11:01 +0700'><FileStats path='demo/Main.java' size='13' bugHash='a4c7358d70926f5c193b0749dbbc2731' bugCount='2'></FileStats><PackageStats package='demo' total_bugs='2' priority_2='1' priority_3='1' total_size='13' total_types='1'><ClassStats bugs='2' size='13' priority_2='1' priority_3='1' interface='false' sourceFile='Main.java' class='demo.Main'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='610' totalMilliseconds='279' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='47392' standardDeviationMicrosecondsPerInvocation='2492' invocations='458'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2468' totalMilliseconds='98' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='65815' standardDeviationMicrosecondsPerInvocation='10429' invocations='40'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='206' totalMilliseconds='94' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='7149' standardDeviationMicrosecondsPerInvocation='423' invocations='460'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='20329' totalMilliseconds='60' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='59996' standardDeviationMicrosecondsPerInvocation='28049' invocations='3'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3372' totalMilliseconds='57' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='18306' standardDeviationMicrosecondsPerInvocation='4952' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='487' totalMilliseconds='36' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='11626' standardDeviationMicrosecondsPerInvocation='1364' invocations='75'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='29330' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='29330' standardDeviationMicrosecondsPerInvocation='0' invocations='1'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1694' totalMilliseconds='28' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='6725' standardDeviationMicrosecondsPerInvocation='2219' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1611' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='21061' standardDeviationMicrosecondsPerInvocation='4893' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='8747' totalMilliseconds='26' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='25064' standardDeviationMicrosecondsPerInvocation='11541' invocations='3'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='61' totalMilliseconds='25' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='2242' standardDeviationMicrosecondsPerInvocation='161' invocations='418'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>